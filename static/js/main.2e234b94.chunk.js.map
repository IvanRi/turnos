{"version":3,"sources":["components/Input.js","components/Button.js","view/Login.js","services/auth.js","components/LeftBar/LeftBar.js","components/Header.js","view/MyTurns.js","view/Perfil.js","view/Dashboard.js","GlobalStyles/theme.js","App.js","serviceWorker.js","index.js"],"names":["Input","React","forwardRef","props","ref","required","id","color","type","label","defaultValue","className","centerNumber","charRestriction","useState","writing","setWriting","info","setInfo","defVal","setDefVal","useEffect","toString","exc","length","str","slice","_handleChange","e","val","document","getElementById","value","handleAnimation","target","checkCharRestriction","Container","spellCheck","maxLength","onChange","placeholder","autoComplete","defaultProps","styled","div","theme","palette","green","css","StyledComponent","button","grey","Button","children","ContentLayout","darkGrey","Login","onLogin","style","marginBottom","onClick","logout","localStorage","clear","window","location","reload","currentDisplay","BarElement","selected","LeftBar","setSelected","changeDisplay","handleClick","Header","title","setMenuDisplay","MyTurns","Perfil","PageContent","Dashboard","menuDisplay","lightGrey","fontGrey","App","isAuth","setIsAuth","setLocalStorageData","key","setItem","user","pass","a","userData","getItem","console","log","checkAuth","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2e234b94.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  const { required, id, color, type, label, defaultValue, className, centerNumber, charRestriction } = props\r\n\r\n  const [writing, setWriting] = useState(\"\")\r\n  const [info, setInfo] = useState(null)\r\n  const [defVal, setDefVal] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (defaultValue) {\r\n      setWriting(defaultValue.toString())\r\n      const exc = defaultValue.length - charRestriction\r\n      if (exc >= 0) {\r\n        const str = defaultValue.slice(0, defaultValue.length - exc)\r\n        setDefVal(str)\r\n        return setInfo(`Sólo se permiten hasta ${charRestriction} carácteres.`)\r\n      }\r\n      setDefVal(defaultValue)\r\n    }\r\n  }, [defaultValue])\r\n\r\n  const handleAnimation = () => {\r\n    const val = document.getElementById(`${id}`).value\r\n    setWriting(val)\r\n  }\r\n\r\n  const checkCharRestriction = e => {\r\n    if (e.target.value.length >= charRestriction) return setInfo(`Sólo se permiten hasta ${charRestriction} carácteres.`)\r\n    setInfo(null)\r\n  }\r\n\r\n  const _handleChange = e => {\r\n    handleAnimation()\r\n    checkCharRestriction(e)\r\n  }\r\n\r\n  return <Container\r\n    className={className}\r\n    color={color}\r\n    centerNumber={centerNumber}\r\n    writing={writing}\r\n  >\r\n    <input\r\n      ref={ref}\r\n      className='input'\r\n      spellCheck=\"false\"\r\n      type={type}\r\n      maxLength={charRestriction}\r\n      id={id}\r\n      onChange={e => _handleChange(e)}\r\n      placeholder={!writing.length ? label : \"\"}\r\n      defaultValue={defVal}\r\n      autoComplete=\"off\"\r\n    />\r\n    {!!writing.length && <div className='placeholder'>{label}</div>}\r\n    {required && <div className='error'>Este es un campo obligatorio</div>}\r\n    {!!info && <div className='info'>{info}</div>}\r\n  </Container>\r\n})\r\n\r\nInput.defaultProps = {\r\n  centerNumber: false,\r\n  required: false,\r\n  type: 'text',\r\n  className: '',\r\n  defaultValue: false,\r\n};\r\n\r\nInput.propTypes = {\r\n  centerNumber: PropTypes.bool,\r\n  required: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  charRestriction: PropTypes.number,\r\n  className: PropTypes.string,\r\n  defaultValue: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool\r\n  ]),\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string\r\n  ]).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  color: PropTypes.string\r\n};\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  .error{\r\n    font-size: .8rem;\r\n    color: red;\r\n    position: absolute;\r\n    bottom: 1px;\r\n  }\r\n\r\n  .info{\r\n    font-size: .8rem;\r\n    color: #ffb000;\r\n    position: absolute;\r\n    bottom: 1px;\r\n  }\r\n\r\n  .placeholder{\r\n    color: ${({ required, color }) => required ? 'red' : color};\r\n    position: absolute;\r\n    top:-3px;\r\n    height:0;\r\n    font-size:.75rem;\r\n  }\r\n\r\n  .input{\r\n    width: 100%;\r\n    border: none;\r\n    margin: 1rem 0;\r\n    padding: .3rem 0;\r\n    font-size: .85rem;\r\n    border-bottom: \r\n      ${({ writing }) => writing ? '2px' : '1px'}\r\n      solid  \r\n      ${({ required, theme, writing }) => required ? 'red' : writing && theme.palette.green} ;\r\n    :focus {\r\n      outline: none;\r\n    }\r\n    background-color: transparent;\r\n    ${({ centerNumber }) => !!centerNumber && css`padding-left:50%;`}\r\n  }\r\n`\r\n\r\nexport default Input;\r\n\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Button = props => {\r\n  return <StyledComponent\r\n    {...props} >\r\n    {props.children}\r\n  </StyledComponent>;\r\n};\r\n\r\nconst StyledComponent = styled.button`\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: .8rem;\r\n  border: none;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  transition: all .3s ease;\r\n  font-size:1.1rem;\r\n  display:flex;\r\n  align-items:center;\r\n  &:focus {\r\n    outline: none;\r\n  };\r\n\r\n  ${({ type }) => type === 'primary' ?\r\n    css`\r\n      background-color: ${({ theme }) => theme.palette.green};\r\n      color: white;\r\n    ` : css`\r\n      background-color: ${({ theme }) => theme.palette.grey};\r\n      color: white;\r\n    `\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n//components\r\nimport Input from '../components/Input';\r\nimport Button from '../components/Button';\r\n\r\nconst Login = props => {\r\n  const { onLogin } = props;\r\n\r\n  function handleLogin() {\r\n    onLogin();\r\n  };\r\n\r\n  return (\r\n    <ContentLayout>\r\n      <div className=\"formContainer\">\r\n        <h3>Iniciar sesión</h3>\r\n        <p style={{ marginBottom: \"2rem\" }}>Completa los campos para iniciar sesión.</p>\r\n        <Input\r\n          label=\"Nombre de usuario\"\r\n          id=\"user\"\r\n        />\r\n        <Input\r\n          label=\"Contraseña\"\r\n          id=\"pass\"\r\n        />\r\n        <Button\r\n          className=\"loginButton\"\r\n          onClick={handleLogin}\r\n        >\r\n          Iniciar sesión\r\n        </Button>\r\n        <div className=\"registerContainer\">\r\n          ¿Usuario nuevo?\r\n          <p>Registrate</p>\r\n        </div>\r\n      </div>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  background-color: ${({ theme }) => theme.palette.darkGrey};\r\n  position:absolute;\r\n  top:0;\r\n  bottom:0;\r\n  left:0;\r\n  right:0;\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n\r\n  h3{\r\n    font-weight:bold;\r\n    font-size:1.8rem;\r\n  }\r\n  \r\n  .formContainer{\r\n    background-color:whitesmoke;\r\n    width:25rem;\r\n    padding:2rem;\r\n    box-sizing:border-box;\r\n    border-radius:.5rem;\r\n  }\r\n\r\n  .loginButton{\r\n    border-radius:.7rem;\r\n    font-size:1rem;\r\n    background-color:${({ theme }) => theme.palette.green};\r\n    padding:.7rem 3rem;\r\n    margin:auto;\r\n    margin-top:2rem;\r\n  }\r\n\r\n  .registerContainer{\r\n    display:flex;\r\n    justify-content:center;\r\n    margin-top:2rem;\r\n\r\n    p{\r\n      margin-left:.5rem;\r\n      color:${({ theme }) => theme.palette.green};\r\n      font-weight:bold;\r\n      cursor:pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","export function logout() {\r\n  localStorage.clear();\r\n  window.location.reload();\r\n};","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n//icons\r\nimport { MdEventAvailable, MdPerson, MdAddAlarm, MdExitToApp } from 'react-icons/md';\r\n//components\r\nimport Button from '../Button';\r\n//utils\r\nimport { logout } from '../../services/auth';\r\n\r\nconst LeftBar = props => {\r\n  const { selected, setSelected, currentDisplay, changeDisplay } = props;\r\n\r\n  const handleClick = id => {\r\n    setSelected(id);\r\n    changeDisplay(false);\r\n  };\r\n\r\n  return (\r\n    <ContentLayout currentDisplay={currentDisplay}>\r\n      <div >\r\n        <Button\r\n          className=\"addTurn\"\r\n          type=\"primary\"\r\n        >\r\n          Nuevo turno\r\n        <MdAddAlarm className=\"addTurn-icon\" />\r\n        </Button>\r\n        <BarElement\r\n          selected={selected}\r\n          id={\"Mis turnos\"}\r\n          onClick={() => handleClick(\"Mis turnos\")}\r\n        >\r\n          <MdEventAvailable className=\"addTurn-icon option-icon\" />\r\n          Mis turnos\r\n        </BarElement>\r\n        <BarElement\r\n          selected={selected}\r\n          id={\"Perfil\"}\r\n          onClick={() => handleClick(\"Perfil\")}\r\n        >\r\n          <MdPerson className=\"addTurn-icon option-icon\" />\r\n          Perfil\r\n        </BarElement>\r\n      </div>\r\n      <Button\r\n        className=\"logoutButton\"\r\n        onClick={logout}\r\n      >\r\n        Cerrar sesión\r\n        <MdExitToApp className=\"addTurn-icon\" />\r\n      </Button>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  height: 100vh;\r\n  width:20rem;\r\n  padding:2rem;\r\n  box-sizing:border-box;\r\n  display:flex;\r\n  flex-direction:column;\r\n  justify-content:space-between;\r\n  background-color: ${({ theme }) => theme.palette.darkGrey};\r\n\r\n  .option-icon{\r\n    margin-right:1rem;\r\n  }\r\n\r\n  .addTurn{\r\n    width:100%;\r\n    display:flex;\r\n    justify-content:center;\r\n  }\r\n\r\n  .addTurn-icon{\r\n    font-size:1.5rem;\r\n    margin-left:1rem;\r\n  }\r\n\r\n  .logoutButton{\r\n    width:100%;\r\n    display:flex;\r\n    justify-content:center;\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    position:absolute;\r\n    left:${({ currentDisplay }) => currentDisplay ? 0 : '-20rem'};\r\n    transition: left .5s;\r\n  }\r\n`;\r\n\r\nconst BarElement = styled.div`\r\n  margin-top:1rem;\r\n  border-radius: .5rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.1rem;\r\n  ${ ({ selected, id }) => selected === id && css`background-color: ${({ theme }) => theme.palette.grey};`}\r\n  color: whitesmoke;\r\n  box-sizing:border-box;\r\n  position:relative;\r\n  cursor:pointer;\r\n`;\r\n\r\nexport default LeftBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n//icons\r\nimport { MdMenu, MdClose } from 'react-icons/md';\r\n\r\nconst Header = props => {\r\n  const { title, setMenuDisplay, currentDisplay } = props;\r\n\r\n  return (\r\n    <ContentLayout>\r\n      {title}\r\n      {\r\n        currentDisplay ? <MdClose\r\n          className=\"menuIcon\"\r\n          onClick={() => setMenuDisplay(!currentDisplay)}\r\n        /> : <MdMenu\r\n            className=\"menuIcon\"\r\n            onClick={() => setMenuDisplay(!currentDisplay)}\r\n          />\r\n      }\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  background-color:${({ theme }) => theme.palette.grey};\r\n  color: whitesmoke;\r\n  height: 4rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content:space-between;\r\n  font-size: 1.5rem;\r\n  padding: 0 1rem;\r\n\r\n  .menuIcon{\r\n    font-size:1.5rem;\r\n    padding:.5rem;\r\n    border-radius: 50%;\r\n    display:none;\r\n    background-color: ${({ theme }) => theme.palette.green};\r\n\r\n    @media (max-width: 800px) {\r\n      display:flex;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MyTurns = props => {\r\n  return (\r\n    <ContentLayout>\r\n      TURNOS\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n\r\n`;\r\n\r\nexport default MyTurns;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Perfil = props => {\r\n  return (\r\n    <ContentLayout>\r\n      Perfil\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n\r\n`;\r\n\r\nexport default Perfil;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n//components\r\nimport LeftBar from '../components/LeftBar/LeftBar';\r\nimport Header from '../components/Header';\r\nimport MyTurns from './MyTurns';\r\nimport Perfil from './Perfil';\r\n\r\nconst Dashboard = props => {\r\n  const [selected, setSelected] = useState('Mis turnos');\r\n  const [menuDisplay, setMenuDisplay] = useState(false);\r\n\r\n  function setCurrentPage() {\r\n    return selected === \"Mis turnos\" ? <MyTurns /> : <Perfil />\r\n  };\r\n\r\n  return (\r\n    <ContentLayout>\r\n      <LeftBar\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        currentDisplay={menuDisplay}\r\n        changeDisplay={setMenuDisplay}\r\n      />\r\n      <PageContent>\r\n        <Header\r\n          title={selected}\r\n          setMenuDisplay={setMenuDisplay}\r\n          currentDisplay={menuDisplay}\r\n        />\r\n        <div className=\"dataContainer\">\r\n          {setCurrentPage()}\r\n        </div>\r\n      </PageContent>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  display:flex;\r\n  overflow:hidden;\r\n`;\r\n\r\nconst PageContent = styled.div`\r\n  width: calc(100vw - 20rem);\r\n\r\n  .dataContainer{\r\n    height: calc(100vh - 4rem);\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    width:100vw;\r\n  }\r\n`;\r\n\r\nexport default Dashboard;\r\n","export default {\r\n  palette: {\r\n    darkGrey: '#2e3539',\r\n    grey: '#464c51',\r\n    lightGrey: '#fafafa',\r\n    green: '#40c173',\r\n    fontGrey: '#8c9093'\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\n//views\nimport Login from './view/Login';\nimport Dashboard from './view/Dashboard';\n//themes\nimport theme from './GlobalStyles/theme';\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState(false)\n\n  useEffect(() => {\n    checkAuth() && setIsAuth(true)\n  }, [isAuth])\n\n  function setLocalStorageData(key, value) {\n    localStorage.setItem(key, value);\n  };\n\n  function checkAuth() {\n    const userData = localStorage.getItem(\"UserData\");\n    console.log(\"UserData\", userData)\n    return userData\n  };\n\n  async function userAuth(user, pass) {\n    //auth\n    setLocalStorageData(\"UserData\", \"TOKEN\")\n    setIsAuth(true)\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        {\n          isAuth ? <Dashboard /> :\n            <Login onLogin={userAuth} />\n        }\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}