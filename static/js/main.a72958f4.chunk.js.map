{"version":3,"sources":["components/Input.js","components/Button.js","components/Loader.js","components/FormError.js","components/Login/LoginForm.js","components/Login/RegisterSuccess.js","services/endpoints.js","components/Login/RegisterForm.js","view/Login.js","services/auth.js","components/LeftBar/LeftBar.js","components/Header.js","view/MyTurns.js","view/Perfil.js","view/Dashboard.js","GlobalStyles/theme.js","App.js","serviceWorker.js","index.js"],"names":["Input","React","forwardRef","props","ref","required","id","color","type","label","defaultValue","className","centerNumber","charRestriction","useState","writing","setWriting","info","setInfo","defVal","setDefVal","useEffect","toString","exc","length","str","slice","_handleChange","e","val","document","getElementById","value","handleAnimation","target","checkCharRestriction","Container","spellCheck","maxLength","onChange","placeholder","autoComplete","defaultProps","styled","div","theme","palette","green","css","StyledComponent","button","grey","Button","children","Loader","ContentLayout","error","FormContainer","LoginForm","onLogin","onError","setFormType","isLoading","setIsLoading","userRef","useRef","passRef","a","current","style","marginBottom","FormError","onClick","RegisterSuccess","userAuth","name","pass","fetch","method","headers","body","URLSearchParams","then","res","json","userRegister","RegisterForm","setError","registerSuccess","setRegisterSuccess","userRegisterRef","passRegisterRef","passRepeatRef","redirectLogin","setTimeout","passRepeat","darkGrey","Login","formType","logout","localStorage","clear","window","location","reload","currentDisplay","BarElement","selected","LeftBar","setSelected","changeDisplay","handleClick","Header","title","setMenuDisplay","MyTurns","Perfil","PageContent","Dashboard","menuDisplay","lightGrey","fontGrey","AppLayout","App","isAuth","setIsAuth","authError","setAuthError","setLocalStorageData","key","setItem","user","token","getItem","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a72958f4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  const { required, id, color, type, label, defaultValue, className, centerNumber, charRestriction } = props\r\n\r\n  const [writing, setWriting] = useState(\"\")\r\n  const [info, setInfo] = useState(null)\r\n  const [defVal, setDefVal] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (defaultValue) {\r\n      setWriting(defaultValue.toString())\r\n      const exc = defaultValue.length - charRestriction\r\n      if (exc >= 0) {\r\n        const str = defaultValue.slice(0, defaultValue.length - exc)\r\n        setDefVal(str)\r\n        return setInfo(`Sólo se permiten hasta ${charRestriction} carácteres.`)\r\n      }\r\n      setDefVal(defaultValue)\r\n    }\r\n  }, [defaultValue])\r\n\r\n  const handleAnimation = () => {\r\n    const val = document.getElementById(`${id}`).value\r\n    setWriting(val)\r\n  }\r\n\r\n  const checkCharRestriction = e => {\r\n    if (e.target.value.length >= charRestriction) return setInfo(`Sólo se permiten hasta ${charRestriction} carácteres.`)\r\n    setInfo(null)\r\n  }\r\n\r\n  const _handleChange = e => {\r\n    handleAnimation()\r\n    checkCharRestriction(e)\r\n  }\r\n\r\n  return <Container\r\n    className={className}\r\n    color={color}\r\n    centerNumber={centerNumber}\r\n    writing={writing}\r\n  >\r\n    <input\r\n      ref={ref}\r\n      className='input'\r\n      spellCheck=\"false\"\r\n      type={type}\r\n      maxLength={charRestriction}\r\n      id={id}\r\n      onChange={e => _handleChange(e)}\r\n      placeholder={!writing.length ? label : \"\"}\r\n      defaultValue={defVal}\r\n      autoComplete=\"off\"\r\n    />\r\n    {!!writing.length && <div className='placeholder'>{label}</div>}\r\n    {required && <div className='error'>Este es un campo obligatorio</div>}\r\n    {!!info && <div className='info'>{info}</div>}\r\n  </Container>\r\n})\r\n\r\nInput.defaultProps = {\r\n  centerNumber: false,\r\n  required: false,\r\n  type: 'text',\r\n  className: '',\r\n  defaultValue: false,\r\n};\r\n\r\nInput.propTypes = {\r\n  centerNumber: PropTypes.bool,\r\n  required: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  charRestriction: PropTypes.number,\r\n  className: PropTypes.string,\r\n  defaultValue: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool\r\n  ]),\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string\r\n  ]).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  color: PropTypes.string\r\n};\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  .error{\r\n    font-size: .8rem;\r\n    color: red;\r\n    position: absolute;\r\n    bottom: 1px;\r\n  }\r\n\r\n  .info{\r\n    font-size: .8rem;\r\n    color: #ffb000;\r\n    position: absolute;\r\n    bottom: 1px;\r\n  }\r\n\r\n  .placeholder{\r\n    color: ${({ required, color }) => required ? 'red' : color};\r\n    position: absolute;\r\n    top:-3px;\r\n    height:0;\r\n    font-size:.75rem;\r\n  }\r\n\r\n  .input{\r\n    width: 100%;\r\n    border: none;\r\n    margin: 1rem 0;\r\n    padding: .3rem 0;\r\n    font-size: .85rem;\r\n    border-bottom: \r\n      ${({ writing }) => writing ? '2px' : '1px'}\r\n      solid  \r\n      ${({ required, theme, writing }) => required ? 'red' : writing && theme.palette.green} ;\r\n    :focus {\r\n      outline: none;\r\n    }\r\n    background-color: transparent;\r\n    ${({ centerNumber }) => !!centerNumber && css`padding-left:50%;`}\r\n  }\r\n`\r\n\r\nexport default Input;\r\n\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Button = props => {\r\n  return <StyledComponent\r\n    {...props} >\r\n    {props.children}\r\n  </StyledComponent>;\r\n};\r\n\r\nconst StyledComponent = styled.button`\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: .8rem;\r\n  border: none;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  transition: all .3s ease;\r\n  font-size:1.1rem;\r\n  display:flex;\r\n  align-items:center;\r\n  &:focus {\r\n    outline: none;\r\n  };\r\n\r\n  ${({ type }) => type === 'primary' ?\r\n    css`\r\n      background-color: ${({ theme }) => theme.palette.green};\r\n      color: white;\r\n    ` : css`\r\n      background-color: ${({ theme }) => theme.palette.grey};\r\n      color: white;\r\n    `\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loader = props => {\r\n    return <Container {...props} >\r\n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    </Container>\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: 15px;\r\n    .lds-ellipsis {\r\n        display: inline-block;\r\n        position: relative;\r\n        width: 64px;\r\n        height: 15px;\r\n    }\r\n    .lds-ellipsis div {\r\n        position: absolute;\r\n        top: 2px;\r\n        width: 11px;\r\n        height: 11px;\r\n        border-radius: 50%;\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n        background: ${props => props.color || 'rgb(65, 130, 252)'};\r\n    }\r\n    .lds-ellipsis div:nth-child(1) {\r\n        left: 6px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(2) {\r\n        left: 6px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(3) {\r\n        left: 26px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(4) {\r\n        left: 45px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(19px, 0);\r\n        }\r\n    }\r\n`\r\n\r\nexport default Loader\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormContainer = props => {\r\n  const { error } = props\r\n\r\n  return <ContentLayout {...props}>\r\n    {error}\r\n  </ContentLayout>\r\n};\r\n\r\nFormContainer.propTypes = {\r\n  error: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool\r\n  ])\r\n}\r\n\r\nconst ContentLayout = styled.div`\r\n  background-color: #ff000038;\r\n  padding: .5rem;\r\n  border-radius: .3rem;\r\n  font-size: .8rem;\r\n  margin-bottom: 1rem;\r\n  display:${({ error }) => error ? 'block' : 'none'} ;\r\n`;\r\n\r\nexport default FormContainer;\r\n","import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\n//components\r\nimport Input from '../Input';\r\nimport Button from '../Button';\r\nimport Loader from '../Loader';\r\nimport FormError from '../FormError';\r\n\r\nconst LoginForm = props => {\r\n  const { onLogin, onError, setFormType } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const userRef = useRef(null);\r\n  const passRef = useRef(null);\r\n\r\n  async function handleLogin() {\r\n    setIsLoading(true)\r\n    await onLogin(userRef.current.value, passRef.current.value)\r\n    setIsLoading(false)\r\n  };\r\n\r\n  return (\r\n    <ContentLayout>\r\n      <h3>Iniciar sesión</h3>\r\n      <p style={{ marginBottom: \"2rem\" }}>Completa los campos para iniciar sesión.</p>\r\n      {onError && <FormError error={onError} />}\r\n      <Input\r\n        label=\"Nombre de usuario\"\r\n        id=\"user\"\r\n        ref={userRef}\r\n      />\r\n      <Input\r\n        label=\"Contraseña\"\r\n        id=\"pass\"\r\n        type=\"password\"\r\n        ref={passRef}\r\n      />\r\n      <Button\r\n        className=\"loginButton\"\r\n        onClick={handleLogin}\r\n      >\r\n        {isLoading ? <Loader color=\"white\" /> : \"Iniciar sesión\"}\r\n      </Button>\r\n      <div className=\"registerContainer\">\r\n        ¿Usuario nuevo?\r\n        <div\r\n          className=\"pStyle\"\r\n          onClick={setFormType}\r\n        >\r\n          Registrate\r\n        </div>\r\n      </div>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  background-color:whitesmoke;\r\n  width:25rem;\r\n  padding:2rem;\r\n  box-sizing:border-box;\r\n  border-radius:.5rem;\r\n\r\n  h3{\r\n    font-weight:bold;\r\n    font-size:1.8rem;\r\n    margin:.5rem 0;\r\n  }\r\n\r\n  .loginButton{\r\n    border-radius:.7rem;\r\n    font-size:1rem;\r\n    background-color:${({ theme }) => theme.palette.green};\r\n    width:10rem;\r\n    display:flex;\r\n    justify-content:center;\r\n    height:2.5rem;\r\n    margin:auto;\r\n    margin-top:2rem;\r\n  }\r\n\r\n  .registerContainer{\r\n    display:flex;\r\n    justify-content:center;\r\n    margin-top:2rem;\r\n\r\n    .pStyle{\r\n      margin-left:.5rem;\r\n      color:${({ theme }) => theme.palette.green};\r\n      font-weight:bold;\r\n      cursor:pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n//icons\r\nimport { MdCheckCircle, MdArrowBack } from 'react-icons/md';\r\n//components\r\nimport Button from '../Button';\r\n\r\nconst RegisterSuccess = props => {\r\n  return (\r\n    <ContentLayout>\r\n      <MdCheckCircle className=\"svgCustom\" />\r\n      <h3 id=\"myH3\">Usuario creado correctamente</h3>\r\n      <Button className=\"backButton\">\r\n        <MdArrowBack /> In al login\r\n      </Button>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  #myH3{\r\n    font-size: 1.5rem;\r\n    margin: 2rem 0;\r\n  }\r\n\r\n  .backButton{\r\n    width:60%; \r\n    background-color:${({ theme }) => theme.palette.green};\r\n    display: flex;\r\n    justify-content: center;\r\n    svg{\r\n      font-size:1.5rem;\r\n    }\r\n  }\r\n\r\n  .svgCustom{\r\n    color:${({ theme }) => theme.palette.green};\r\n    font-size:5rem;\r\n  }\r\n`;\r\n\r\nexport default RegisterSuccess;\r\n","//aca van a estar los endpoints\r\nconst PROD_URL = \"https://followmeapi.herokuapp.com\"\r\nconst DEV_URL = \"http://localhost:4001\"\r\n\r\nexport const userAuth = (name, pass) => fetch(`${DEV_URL}/login`, {\r\n  method: 'POST',\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  },\r\n  body: new URLSearchParams(`name=${name}&password=${pass}`)\r\n}).then(res => res.json());\r\n\r\nexport const userRegister = (name, pass) => fetch(`${DEV_URL}/register`, {\r\n  method: 'POST',\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  },\r\n  body: new URLSearchParams(`name=${name}&password=${pass}`)\r\n}).then(res => res.json());","import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\n//components\r\nimport Input from '../Input';\r\nimport Button from '../Button';\r\nimport Loader from '../Loader';\r\nimport FormError from '../FormError';\r\nimport RegisterSuccess from './RegisterSuccess'\r\n//endpoints\r\nimport { userRegister } from '../../services/endpoints';\r\n\r\nconst RegisterForm = props => {\r\n  const { setFormType } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState(null);\r\n  const [registerSuccess, setRegisterSuccess] = useState(false)\r\n\r\n  const userRegisterRef = useRef(null);\r\n  const passRegisterRef = useRef(null);\r\n  const passRepeatRef = useRef(null);\r\n\r\n  function redirectLogin() {\r\n    setRegisterSuccess(true)\r\n    setTimeout(() => {\r\n      setFormType('login')\r\n    }, 3000)\r\n  };\r\n\r\n  async function handleRegister() {\r\n    const pass = passRegisterRef.current.value\r\n    const passRepeat = passRepeatRef.current.value\r\n\r\n    if (pass !== passRepeat) return setError(\"Las contraseñas no coinciden\")\r\n    setIsLoading(true)\r\n    const res = await userRegister(userRegisterRef.current.value, pass)\r\n    setIsLoading(false)\r\n    if (res.error) return setError(res.error)\r\n    redirectLogin()\r\n  };\r\n\r\n  return (\r\n    <ContentLayout>\r\n      {\r\n        registerSuccess ? <RegisterSuccess /> :\r\n          <>\r\n            <h3>Registrarme</h3>\r\n            <p style={{ marginBottom: \"2rem\" }}>Completa los campos para registrarte.</p>\r\n            {error && <FormError error={error} />}\r\n            <Input\r\n              label=\"Nombre de usuario\"\r\n              id=\"userRegister\"\r\n              ref={userRegisterRef}\r\n            />\r\n            <Input\r\n              label=\"Contraseña\"\r\n              id=\"passRegister\"\r\n              type=\"password\"\r\n              ref={passRegisterRef}\r\n            />\r\n            <Input\r\n              label=\"Repita la contraseña\"\r\n              id=\"passRepeat\"\r\n              type=\"password\"\r\n              ref={passRepeatRef}\r\n            />\r\n            <Button\r\n              className=\"loginButton\"\r\n              onClick={handleRegister}\r\n            >\r\n              {isLoading ? <Loader color=\"white\" /> : \"Registrarme\"}\r\n            </Button>\r\n            <div className=\"toLogin\">\r\n              ¿Ya tienes un usuario?\r\n              <div\r\n                className=\"pStyle\"\r\n                onClick={setFormType}\r\n              >\r\n                Inicia sesión\r\n              </div>\r\n            </div>\r\n          </>\r\n      }\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  background-color:whitesmoke;\r\n  width:25rem;\r\n  padding:2rem;\r\n  box-sizing:border-box;\r\n  border-radius:.5rem;\r\n\r\n  h3{\r\n    font-weight:bold;\r\n    font-size:1.8rem;\r\n    margin:.5rem 0;\r\n  }\r\n\r\n  .loginButton{\r\n    border-radius:.7rem;\r\n    font-size:1rem;\r\n    background-color:${({ theme }) => theme.palette.green};\r\n    width:10rem;\r\n    display:flex;\r\n    justify-content:center;\r\n    height:2.5rem;\r\n    margin:auto;\r\n    margin-top:2rem;\r\n  }\r\n\r\n  .toLogin{\r\n    display:flex;\r\n    justify-content:center;\r\n    margin-top:2rem;\r\n\r\n    .pStyle{\r\n      margin-left:.5rem;\r\n      color:${({ theme }) => theme.palette.green};\r\n      font-weight:bold;\r\n      cursor:pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n//components\r\nimport LoginForm from '../components/Login/LoginForm';\r\nimport RegisterForm from '../components/Login/RegisterForm';\r\n\r\nconst Login = props => {\r\n  const [formType, setFormType] = useState(\"login\")\r\n\r\n  return (\r\n    <ContentLayout>\r\n      {\r\n        formType === 'login' ?\r\n          <LoginForm {...props} setFormType={() => setFormType(\"registro\")} /> :\r\n          <RegisterForm\r\n            setFormType={() => setFormType(\"login\")}\r\n          />\r\n      }\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  background-color: ${({ theme }) => theme.palette.darkGrey};\r\n  position:absolute;\r\n  top:0;\r\n  bottom:0;\r\n  left:0;\r\n  right:0;\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n`;\r\n\r\nexport default Login;\r\n","export function logout() {\r\n  localStorage.clear();\r\n  window.location.reload();\r\n};","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n//icons\r\nimport { MdEventAvailable, MdPerson, MdAddAlarm, MdExitToApp } from 'react-icons/md';\r\n//components\r\nimport Button from '../Button';\r\n//utils\r\nimport { logout } from '../../services/auth';\r\n\r\nconst LeftBar = props => {\r\n  const { selected, setSelected, currentDisplay, changeDisplay } = props;\r\n\r\n  const handleClick = id => {\r\n    setSelected(id);\r\n    changeDisplay(false);\r\n  };\r\n\r\n  return (\r\n    <ContentLayout currentDisplay={currentDisplay}>\r\n      <div >\r\n        <Button\r\n          className=\"addTurn\"\r\n          type=\"primary\"\r\n        >\r\n          Nuevo turno\r\n        <MdAddAlarm className=\"addTurn-icon\" />\r\n        </Button>\r\n        <BarElement\r\n          selected={selected}\r\n          id={\"Mis turnos\"}\r\n          onClick={() => handleClick(\"Mis turnos\")}\r\n        >\r\n          <MdEventAvailable className=\"addTurn-icon option-icon\" />\r\n          Mis turnos\r\n        </BarElement>\r\n        <BarElement\r\n          selected={selected}\r\n          id={\"Perfil\"}\r\n          onClick={() => handleClick(\"Perfil\")}\r\n        >\r\n          <MdPerson className=\"addTurn-icon option-icon\" />\r\n          Perfil\r\n        </BarElement>\r\n      </div>\r\n      <Button\r\n        className=\"logoutButton\"\r\n        onClick={logout}\r\n      >\r\n        Cerrar sesión\r\n        <MdExitToApp className=\"addTurn-icon\" />\r\n      </Button>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  height: 100vh;\r\n  width:20rem;\r\n  padding:2rem;\r\n  box-sizing:border-box;\r\n  display:flex;\r\n  flex-direction:column;\r\n  justify-content:space-between;\r\n  background-color: ${({ theme }) => theme.palette.darkGrey};\r\n\r\n  .option-icon{\r\n    margin-right:1rem;\r\n  }\r\n\r\n  .addTurn{\r\n    width:100%;\r\n    display:flex;\r\n    justify-content:center;\r\n  }\r\n\r\n  .addTurn-icon{\r\n    font-size:1.5rem;\r\n    margin-left:1rem;\r\n  }\r\n\r\n  .logoutButton{\r\n    width:100%;\r\n    display:flex;\r\n    justify-content:center;\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    position:absolute;\r\n    left:${({ currentDisplay }) => currentDisplay ? 0 : '-20rem'};\r\n    transition: left .5s;\r\n  }\r\n`;\r\n\r\nconst BarElement = styled.div`\r\n  margin-top:1rem;\r\n  border-radius: .5rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.1rem;\r\n  ${ ({ selected, id }) => selected === id && css`background-color: ${({ theme }) => theme.palette.grey};`}\r\n  color: whitesmoke;\r\n  box-sizing:border-box;\r\n  position:relative;\r\n  cursor:pointer;\r\n`;\r\n\r\nexport default LeftBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n//icons\r\nimport { MdMenu, MdClose } from 'react-icons/md';\r\n\r\nconst Header = props => {\r\n  const { title, setMenuDisplay, currentDisplay } = props;\r\n\r\n  return (\r\n    <ContentLayout>\r\n      {title}\r\n      {\r\n        currentDisplay ? <MdClose\r\n          className=\"menuIcon\"\r\n          onClick={() => setMenuDisplay(!currentDisplay)}\r\n        /> : <MdMenu\r\n            className=\"menuIcon\"\r\n            onClick={() => setMenuDisplay(!currentDisplay)}\r\n          />\r\n      }\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  background-color:${({ theme }) => theme.palette.grey};\r\n  color: whitesmoke;\r\n  height: 4rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content:space-between;\r\n  font-size: 1.5rem;\r\n  padding: 0 1rem;\r\n\r\n  .menuIcon{\r\n    font-size:1.5rem;\r\n    padding:.5rem;\r\n    border-radius: 50%;\r\n    display:none;\r\n    background-color: ${({ theme }) => theme.palette.green};\r\n\r\n    @media (max-width: 800px) {\r\n      display:flex;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MyTurns = props => {\r\n  return (\r\n    <ContentLayout>\r\n      TURNOS\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n\r\n`;\r\n\r\nexport default MyTurns;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Perfil = props => {\r\n  return (\r\n    <ContentLayout>\r\n      Perfil\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n\r\n`;\r\n\r\nexport default Perfil;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n//components\r\nimport LeftBar from '../components/LeftBar/LeftBar';\r\nimport Header from '../components/Header';\r\nimport MyTurns from './MyTurns';\r\nimport Perfil from './Perfil';\r\n\r\nconst Dashboard = props => {\r\n  const [selected, setSelected] = useState('Mis turnos');\r\n  const [menuDisplay, setMenuDisplay] = useState(false);\r\n\r\n  function setCurrentPage() {\r\n    return selected === \"Mis turnos\" ? <MyTurns /> : <Perfil />\r\n  };\r\n\r\n  return (\r\n    <ContentLayout>\r\n      <LeftBar\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        currentDisplay={menuDisplay}\r\n        changeDisplay={setMenuDisplay}\r\n      />\r\n      <PageContent>\r\n        <Header\r\n          title={selected}\r\n          setMenuDisplay={setMenuDisplay}\r\n          currentDisplay={menuDisplay}\r\n        />\r\n        <div className=\"dataContainer\">\r\n          {setCurrentPage()}\r\n        </div>\r\n      </PageContent>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  display:flex;\r\n  overflow:hidden;\r\n`;\r\n\r\nconst PageContent = styled.div`\r\n  width: calc(100vw - 20rem);\r\n\r\n  .dataContainer{\r\n    height: calc(100vh - 4rem);\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    width:100vw;\r\n  }\r\n`;\r\n\r\nexport default Dashboard;\r\n","export default {\r\n  palette: {\r\n    darkGrey: '#2e3539',\r\n    grey: '#464c51',\r\n    lightGrey: '#fafafa',\r\n    green: '#40c173',\r\n    fontGrey: '#8c9093'\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n//views\nimport Login from './view/Login';\nimport Dashboard from './view/Dashboard';\n//themes\nimport theme from './GlobalStyles/theme';\n//endpoint auth\nimport { userAuth } from './services/endpoints';\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState(false)\n  const [authError, setAuthError] = useState(null)\n\n  useEffect(() => {\n    checkAuth() && setIsAuth(true)\n  }, [isAuth])\n\n  function setLocalStorageData(key, value) {\n    localStorage.setItem(key, value);\n  };\n\n  function checkAuth() {\n    const userData = localStorage.getItem(\"user_twirp\");\n    return userData\n  };\n\n  async function _userAuth(user, pass) {\n    setAuthError(null)\n    //auth\n    const res = await userAuth(user, pass);\n    if (res.error) return setAuthError(res.error)\n    setLocalStorageData(\"user_twirp\", res.token);\n    setIsAuth(true);\n  };\n\n  return (\n    <AppLayout>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          {\n            isAuth ? <Dashboard /> :\n              <Login\n                onLogin={_userAuth}\n                onError={authError}\n              />\n          }\n        </div>\n      </ThemeProvider>\n    </AppLayout>\n  );\n};\n\nconst AppLayout = styled.div`\n  line-height: 1;\n  font-family: \"Roboto\", sans-serif;\n  color: #313638;\n  background-color: #fffded;\n  position:absolute;\n  left:0;\n  right:0;\n  top: 0;\n  bottom:0;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}